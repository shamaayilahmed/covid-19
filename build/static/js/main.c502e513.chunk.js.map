{"version":3,"sources":["components/Cards/cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","change","axios","get","fetchDailyData","modified","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","daily","setDaily","useEffect","fetchedData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountry","fetchCountry","setFetchCountry","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","setData","setCountry","isLoad","setIsLoad","style","margin","type","height","width","src","alt","image","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c502e513.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__xY6M3\",\"card\":\"cards_card__1ihU0\",\"infected\":\"cards_infected__2vfqM\",\"recovered\":\"cards_recovered__25F3M\",\"deaths\":\"cards_deaths__248Zs\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./cards.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  // console.log(data);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active COVID-19 cases\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of COVID-19 recoveries\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of COVID-19 deaths</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\nexport const fetchData = async (country) => {\r\n  let change = url;\r\n  if (country) {\r\n    change = `${url}/countries/${country}`\r\n  }\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(change);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modified = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modified;\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Charts.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [daily, setDaily] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchedData = async () => {\r\n      setDaily(await fetchDailyData());\r\n    };\r\n\r\n    fetchedData();\r\n  }, []);\r\n\r\n  const lineChart = daily.length ? (\r\n    <Line\r\n      data={{\r\n        labels: daily.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: daily.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: daily.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountry }) => {\r\n  const [fetchCountry, setFetchCountry] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchedData = async () => {\r\n      setFetchCountry(await fetchCountries());\r\n    };\r\n    fetchedData();\r\n  }, [setFetchCountry]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountry(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchCountry.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { useEffect, useState } from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api'\n\nimport ReactLoading from 'react-loading'\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState('');\n  const [isLoad, setIsLoad] = useState(true);\n\n  useEffect(() => {\n    const fetchedData = async () => {\n      setData(await fetchData());\n      setIsLoad(false);\n    };\n    fetchedData();\n  }, []);\n\n  const handleCountry = async (country) => {\n    setData(await fetchData(country));\n    setCountry(country);\n    setIsLoad(false);\n  }\n\n  if (isLoad) {\n    return <div style={{ margin: '20% 50%' }}>\n      <ReactLoading type='spinningBubbles' color='#23a699' height={70} width={80} />\n    </div>\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src='https://i.ibb.co/7QpKsCX/image.png' alt='COVID_19' className={styles.image} />\n\n      <Cards data={data} />\n      <CountryPicker handleCountry={handleCountry} />\n      <Chart data={data} country={country} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1dEyZ\",\"image\":\"App_image__3sNLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__GMqhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__HnIru\"};"],"sourceRoot":""}